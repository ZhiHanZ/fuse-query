on:
  repository_dispatch:
    types: [run-perf]
name: Running performance test on self hosted runner (primary for benchmarking and CI tests)
jobs:
  run_perf:
    name: Running build_docker
    if: github.event.action == 'run-perf'
    runs-on: self-hosted
    env:
      GITHUB_TOKEN: ${{ github.token }}
      GITHUB_ORG: zhihanz
      GITHUB_REPO: fuse-query
      DISPATCH_NAME: run-perf
      GITHUB_STATUS_TARGET_URL: https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}
      SHA: ${{ github.event.client_payload.REF }}
      PR_NUMBER: ${{ github.event.client_payload.PR_NUMBER }} 
      LAST_COMMIT_SHA: ${{ github.event.client_payload.LAST_COMMIT_SHA }}
      UUID: ${{ github.event.client_payload.UUID }}
      START_TIME: ${{ github.event.client_payload.START_TIME }}
    steps:
    - name: Update status to pending
      run: |
        curl -i -X POST \
        -H "Authorization: Bearer $GITHUB_TOKEN" \
        -H "Content-Type: application/json" \
        --data '{"state":"pending","context":"run-perf-status","target_url":"'$GITHUB_STATUS_TARGET_URL'"}' \
        "https://api.github.com/repos/$GITHUB_REPOSITORY/statuses/$LAST_COMMIT_SHA";

        curl -i -X POST \
        -H "Content-Type: application/json" \
        --data '{"org":"${{GITHUB_ORG}}","repo":"${{GITHUB_REPO}}", "pr": "${{PR_NUMBER}}", "commitSHA": "${{LAST_COMMIT_SHA}}", \
        "uuid": "${{UUID}}", "run_id": "${{github.run_id}}", "task_name": "${{DISPATCH_NAME}}", "state": "PENDING", "start_time": "${{START_TIME}}"}' \
        ${{secret.WEBHOOK_URL}};
    - uses: docker://datafuselabs/test-infra:latest
      with:
        entrypoint: "docker_entrypoint"
        args: make deploy
    - uses: docker://datafuselabs/test-infra:latest
      with:
        entrypoint: "docker_entrypoint"
        args: make test
   - name: Delete all resources
     if: always()
     uses: docker://datafuselabs/test-infra:latest
       with:
         entrypoint: "docker_entrypoint"
         args: make clean

    - name: Update status to failure
      if: failure()
      run: |
        curl -i -X POST \
        -H "Authorization: Bearer $GITHUB_TOKEN" \
        -H "Content-Type: application/json" \
        --data '{"state":"failure","context":"build-docker-status,"target_url":"'$GITHUB_STATUS_TARGET_URL'"}' \
        "https://api.github.com/repos/$GITHUB_REPOSITORY/statuses/$LAST_COMMIT_SHA";

        curl -i -X POST \
        -H "Content-Type: application/json" \
        --data '{"org":"${{GITHUB_ORG}}","repo":"${{GITHUB_REPO}}", "pr": "${{PR_NUMBER}}", "commitSHA": "${{LAST_COMMIT_SHA}}", \
        "uuid": "${{UUID}}", "run_id": "${{github.run_id}}", "task_name": "${{DISPATCH_NAME}}", "state": "FAIL", "start_time": "${{START_TIME}}"}' \
        ${{secret.WEBHOOK_URL}};
    - name: Update status to success
      if: success()
      run: |
        curl -i -X POST \
        -H "Authorization: Bearer $GITHUB_TOKEN" \
        -H "Content-Type: application/json" \
        --data '{"state":"success","context":"build-docker-status,"target_url":"'$GITHUB_STATUS_TARGET_URL'"}' \
        "https://api.github.com/repos/$GITHUB_REPOSITORY/statuses/$LAST_COMMIT_SHA";

        curl -i -X POST \
        -H "Content-Type: application/json" \
        --data '{"org":"${{GITHUB_ORG}}","repo":"${{GITHUB_REPO}}", "pr": "${{PR_NUMBER}}", "commitSHA": "${{LAST_COMMIT_SHA}}", \
        "uuid": "${{UUID}}", "run_id": "${{github.run_id}}", "task_name": "${{DISPATCH_NAME}}", "state": "SUCCESS", "start_time": "${{START_TIME}}"}' \
        ${{secret.WEBHOOK_URL}};